@page "/assignment/index"
@using TaskAssignment.Shared.Models
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<div class="container">
    <h3>Lista de Tareas</h3>
    <div class="table-responsive">
        <table class="table table-striped table-primary">
            <thead>
                <tr>
                    <th class="table-dark">Id</th>
                    <th class="table-dark">Título</th>
                    <th class="table-dark">Descripción</th>
                    <th class="table-dark">Fecha de Inicio</th>
                    <th class="table-dark">Fecha de Fin</th>
                    <th class="table-dark">Prioridad</th>
                    <th class="table-dark">Estado</th>
                    <th class="table-dark">Categoría</th>
                    <th class="table-dark">Asignado a</th>
                    <th class="table-dark">Recordatorio</th>
                    <th class="table-dark">Fecha de Recordatorio</th>
                    <th class="table-dark">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (assignments == null)
                {
                    <tr>
                        <td colspan="8" align="center">No Data Found</td>
                    </tr>
                }
                else
                {
                    @foreach (var assignment in assignments)
                    {
                        <tr>
                            <td class="table-dark">@assignment.Id</td>
                            <td class="table-dark">@assignment.Title</td>
                            <td class="table-dark">@assignment.Description</td>
                            <td class="table-dark">@assignment.StartDate</td>
                            <td class="table-dark">@assignment.EndDate</td>
                            <td class="table-dark">@assignment.Priority</td>
                            <td class="table-dark">@assignment.Status</td>
                            <td class="table-dark">@assignment.Category</td>
                            <td class="table-dark">@assignment.Assignee</td>
                            <td class="table-dark">@assignment.Reminder</td>
                            <td class="table-dark">@assignment.ReminderDate</td>
                            <td class="table-dark">
                                <div class="btn-group" role="group">
                                    <a href="@GetEditAssignmentViewUrl(@assignment)" class="btn btn-primary" tabindex="-1" role="button" aria-disabled="true">Edit</a>
                                    <a class="btn btn-danger" tabindex="-1" role="button" aria-disabled="true" @onclick="_ => DeleteAssignment(assignment)">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<h4 style="color:blue;">
    Quiere agregar una nueva tarea? Haz clic en <a href="/assignment/create">Agregar tarea</a>
</h4>
@code {
    private Assignment[]? assignments;

    protected override async Task OnInitializedAsync()
    {
        await this.FetchAssignments();
    }

    private string GetAssignmentViewUrl(Assignment assignment)
    {
        return $"assignment/view/{assignment.Id}";
    }

    private string GetEditAssignmentViewUrl(Assignment assignment)
    {
        return $"assignment/edit/{assignment.Id}";
    }

    private async Task DeleteAssignment(Assignment assignment)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Are you sure to Delete the Assignment Record : {assignment.Id}?"); // Confirm

        if (confirmed)
        {
            var result = await Http.DeleteAsync($"/api/assignment/deleteassignment/{assignment.Id}");
            if (result != null && result.StatusCode == System.Net.HttpStatusCode.OK)
            {
                await this.FetchAssignments();
            }
        }
    }

    private async Task FetchAssignments()
    {
        assignments = await Http.GetFromJsonAsync<Assignment[]>("/api/assignment/getassignments");
    }
}
